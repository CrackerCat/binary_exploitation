#!/usr/bin/python3
from pwn import *
elf = context.binary = ELF('re-alloc')
libc = ELF('libc.so')
index = 0
def start():
    if args.GDB:
        context.terminal = ['tmux', 'splitw', "-h"]
        return gdb.debug(elf.path)
    else:
        return process(elf.path)
# remote('chall.pwnable.tw', 10106)  

def malloc(size, data):
    global index
    io.sendafter(b':', b'1')
    io.sendafter(b':', str(size).encode)
    io.sendafter(b':', data)
    index += 1
    return index-1

def realloc(size, data):
    global index
    io.sendafter(b':', b'2')
    io.sendafter(b':', str(size).encode())
    io.sendafter(b':', data))
    index += 1
    return index-1

def free(ind):
    io.sendafter(b':', b'2')
    io.sendafter(b':', str(ind).encode())
'''
max realloc 121
'''
#######################
io = start()
malloc()
io.interactive()
